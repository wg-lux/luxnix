- name: Ensure vault directory exists
  ansible.builtin.file:
    path: "{{ lx_vault_dir }}"
    state: directory
    mode: "0700"
    owner: "{{ ansible_user }}"
  become: true

- name: Check if keycloak user exists
  ansible.builtin.getent:
    database: passwd
    key: keycloak
  register: keycloak_user
  ignore_errors: true

- name: Deploy Keycloak database password from source
  ansible.builtin.copy:
    src: "{{ keycloak_host_psql_keycloak_pw_src }}"
    dest: "{{ keycloak_host_psql_keycloak_pw_file }}"
    mode: "0600"
    owner: "{{ ansible_user }}" # First deploy as ansible user
    group: "sensitiveServices" # defined in generic-settings.sensitiveServiceGroupName
  become: true
  no_log: false
  vars:
    ansible_vault_identity: "{{ inventory_hostname }}@{{ lx_vault_dir_src }}/psk/{{ inventory_hostname }}.psk"

- name: Read Keycloak database password
  ansible.builtin.slurp:
    src: "{{ keycloak_host_psql_keycloak_pw_file }}"
  register: keycloak_db_password_b64
  no_log: true

- name: Set Keycloak database user password
  community.postgresql.postgresql_user:
    name: '{{ keycloak_host_roles["keycloakHost.dbUsername"] | regex_replace(''"'', '''') }}'
    password: "{{ keycloak_db_password_b64.content | b64decode | trim }}"
    state: present
    db: postgres
  become: true
  become_user: postgres
  become_method: ansible.builtin.sudo
  no_log: true

- name: Test Keycloak database user password
  ansible.builtin.command:
    cmd: psql -h 127.0.0.1 -U {{ keycloak_host_roles["keycloakHost.dbUsername"] | regex_replace('"', '') }} -d postgres -c "SELECT 1;"
  register: psql_test_result
  changed_when: false
  failed_when: psql_test_result.rc != 0
  environment:
    PGPASSWORD: "{{ keycloak_db_password_b64.content | b64decode | trim }}"
  no_log: true

- name: Display connection test result
  ansible.builtin.debug:
    msg: "Database connection test successful"
  when: psql_test_result is success
