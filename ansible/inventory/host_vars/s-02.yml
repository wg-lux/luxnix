# inventory/host_vars/s-02.yml
---
template_name: "base-server"
primary_group: "base_server"

host_roles:
  base-server.enable: "true"
  aglnet.client.enable: "true"
  ssh-access.dev-01.enable: "true"
  ssh-access.dev-01.idEd25519: '"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEh2Bg+mSSvA80ALScpb81Q9ZaBFdacdxJZtAfZpwYkK"'
  postgres.main.enable: "true"
  postgres.main.authentication: |
    #type database                  DBuser                      address                     auth-method         optional_ident_map
    local sameuser                  all                                                     peer                map=superuser_map
    host  all                       all                172.16.255.106/32          scram-sha-256 map=superuser_map
    host  replication               ${config.postgres.main.replUser}    172.16.255.106/32          scram-sha-256
    host  ${config.postgres.main.devUser}            ${config.postgres.main.devUser}     172.16.255.106/32          scram-sha-256
  postgres.main.identMap: |
    # ArbitraryMapName systemUser DBUser
    superuser_map      root      postgres
    superuser_map      root      ${config.postgres.main.replUser}
    superuser_map      ${config.user.admin.name}     ${config.user.admin.name}
    superuser_map      ${config.user.admin.name}     endoregClient
    superuser_map      postgres  postgres

    # Let other names login as themselves
    superuser_map      /^(.*)$   \1

host_services: {}

generic_settings:
  hostPlatform: "x86_64-linux"
  systemStateVersion: "23.11"

  linux:
    cpuMicrocode: "intel"

    kernelPackages: "pkgs.linuxPackages_latest"
    kernelModules:
      - "kvm-intel"
    initrd:
      supportedFilesystems:
        - "nfs"
      kernelModules:
        - "nfs"
      availableKernelModules:
        - "xhci_pci"
        - "ahci"
        - "usbhid"
        - "nvme"
        - "usb_storage"
        - "sd_mod"
    supportedFilesystems:
      - "btrfs"
    resumeDevice: "/dev/disk/by-label/nixos"
    kernelParams: []
    kernelModulesBlacklist: []
